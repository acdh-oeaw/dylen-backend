include:
- template: Auto-DevOps.gitlab-ci.yml
- template: Workflows/MergeRequest-Pipelines.gitlab-ci.yml

image: adoptopenjdk/openjdk11:ubi

stages:
  - build
  - package
  - test
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

variables:
  CI_DEBUG_TRACE: "false"

build:
  image: adoptopenjdk/openjdk11:ubi
  stage: build
  services:
    - docker:19.03.12-dind
  script:
    - ./gradlew build
  variables:
    DOCKER_HOST: tcp://localhost:2375
  artifacts:
    paths:
      - build/libs/*.jar
    expire_in: 7 days

build_image:
  image: docker/compose:latest
  stage: package
  services:
    - name: docker:19.03.12-dind
      command: ["--mtu=1450"]
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    DOCKER_HOST: tcp://localhost:2375
    CI_DEBUG_TRACE: "false"
  script:
    - export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
      export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    - export
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg JAR_FILE=build/libs/dylen-ego-network-service-0.2.0.jar -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG

test:
  variables:
    POSTGRES_VERSION: 9.6.16
    POSTGRES_DB: test
    DOCKER_HOST: tcp://localhost:2375
    DOCKER_DRIVER: overlay2

  services:
    - "postgres:${POSTGRES_VERSION}"
    - docker:19.03.12-dind
  stage: test
  image: gliderlabs/herokuish:latest
  needs: []
  script:
    - |
      if [ -z ${KUBERNETES_PORT+x} ]; then
        DB_HOST=postgres
      else
        DB_HOST=localhost
      fi
    - export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:5432/${POSTGRES_DB}"
    - cp -R . /tmp/app
    - /bin/herokuish buildpack test
  rules:
    - if: '$TEST_DISABLED'
      when: never
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'

# deploy master
deploy-master:
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.7"
  stage: deploy
  variables:
    POSTGRES_ENABLED: "false"
    ROLLOUT_RESOURCE_TYPE: deployment
  script:
    - auto-deploy check_kube_domain
    - auto-deploy download_chart
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy delete canary
    - auto-deploy delete rollout
    - auto-deploy persist_environment_url
  environment:
    name: pre-prod
    url: https://dylen-ego-network-service-dev.acdh-dev.oeaw.ac.at
    kubernetes:
      namespace: dylen-ego
  artifacts:
    paths: [environment_url.txt, tiller.log]
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'

# deploy prod
deploy-prod:
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.7"
  stage: deploy
  variables:
    POSTGRES_ENABLED: "false"
    ROLLOUT_RESOURCE_TYPE: deployment
  script:
    - auto-deploy check_kube_domain
    - auto-deploy download_chart
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy delete canary
    - auto-deploy delete rollout
    - auto-deploy persist_environment_url
  environment:
    name: dylen-ego-prod
    url: https://dylen-ego-network-service.acdh-dev.oeaw.ac.at
    kubernetes:
      namespace: dylen-ego-prod
  artifacts:
    paths: [environment_url.txt, tiller.log]
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "prod"'